<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jiesunshine.software_system.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.jiesunshine.software_system.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pic_link" property="picLink" jdbcType="VARCHAR" />
    <result column="software_count" property="softwareCount" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="reg_time" property="regTime" jdbcType="TIMESTAMP" />
    <result column="reg_ip" property="regIp" jdbcType="VARCHAR" />
    <result column="pre_login_time" property="preLoginTime" jdbcType="TIMESTAMP" />
    <result column="pre_login_ip" property="preLoginIp" jdbcType="VARCHAR" />
    <result column="pre_update_time" property="preUpdateTime" jdbcType="TIMESTAMP" />
    <result column="pre_update_ip" property="preUpdateIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, password, email, pic_link, software_count, type, reg_time, reg_ip, pre_login_time, 
    pre_login_ip, pre_update_time, pre_update_ip
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.jiesunshine.software_system.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jiesunshine.software_system.entity.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jiesunshine.software_system.entity.User" >
    insert into user (id, name, password, 
      email, pic_link, software_count, 
      type, reg_time, reg_ip, 
      pre_login_time, pre_login_ip, pre_update_time, 
      pre_update_ip)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{picLink,jdbcType=VARCHAR}, #{softwareCount,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{regTime,jdbcType=TIMESTAMP}, #{regIp,jdbcType=VARCHAR}, 
      #{preLoginTime,jdbcType=TIMESTAMP}, #{preLoginIp,jdbcType=VARCHAR}, #{preUpdateTime,jdbcType=TIMESTAMP}, 
      #{preUpdateIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jiesunshine.software_system.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="picLink != null" >
        pic_link,
      </if>
      <if test="softwareCount != null" >
        software_count,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="regTime != null" >
        reg_time,
      </if>
      <if test="regIp != null" >
        reg_ip,
      </if>
      <if test="preLoginTime != null" >
        pre_login_time,
      </if>
      <if test="preLoginIp != null" >
        pre_login_ip,
      </if>
      <if test="preUpdateTime != null" >
        pre_update_time,
      </if>
      <if test="preUpdateIp != null" >
        pre_update_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="picLink != null" >
        #{picLink,jdbcType=VARCHAR},
      </if>
      <if test="softwareCount != null" >
        #{softwareCount,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="regTime != null" >
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regIp != null" >
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="preLoginTime != null" >
        #{preLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preLoginIp != null" >
        #{preLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="preUpdateTime != null" >
        #{preUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preUpdateIp != null" >
        #{preUpdateIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jiesunshine.software_system.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.picLink != null" >
        pic_link = #{record.picLink,jdbcType=VARCHAR},
      </if>
      <if test="record.softwareCount != null" >
        software_count = #{record.softwareCount,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.regTime != null" >
        reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.regIp != null" >
        reg_ip = #{record.regIp,jdbcType=VARCHAR},
      </if>
      <if test="record.preLoginTime != null" >
        pre_login_time = #{record.preLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.preLoginIp != null" >
        pre_login_ip = #{record.preLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.preUpdateTime != null" >
        pre_update_time = #{record.preUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.preUpdateIp != null" >
        pre_update_ip = #{record.preUpdateIp,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      pic_link = #{record.picLink,jdbcType=VARCHAR},
      software_count = #{record.softwareCount,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      reg_ip = #{record.regIp,jdbcType=VARCHAR},
      pre_login_time = #{record.preLoginTime,jdbcType=TIMESTAMP},
      pre_login_ip = #{record.preLoginIp,jdbcType=VARCHAR},
      pre_update_time = #{record.preUpdateTime,jdbcType=TIMESTAMP},
      pre_update_ip = #{record.preUpdateIp,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jiesunshine.software_system.entity.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="picLink != null" >
        pic_link = #{picLink,jdbcType=VARCHAR},
      </if>
      <if test="softwareCount != null" >
        software_count = #{softwareCount,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="regTime != null" >
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regIp != null" >
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="preLoginTime != null" >
        pre_login_time = #{preLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preLoginIp != null" >
        pre_login_ip = #{preLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="preUpdateTime != null" >
        pre_update_time = #{preUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preUpdateIp != null" >
        pre_update_ip = #{preUpdateIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jiesunshine.software_system.entity.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pic_link = #{picLink,jdbcType=VARCHAR},
      software_count = #{softwareCount,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      pre_login_time = #{preLoginTime,jdbcType=TIMESTAMP},
      pre_login_ip = #{preLoginIp,jdbcType=VARCHAR},
      pre_update_time = #{preUpdateTime,jdbcType=TIMESTAMP},
      pre_update_ip = #{preUpdateIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>